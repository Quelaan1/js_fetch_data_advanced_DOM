{"version":3,"sources":["scripts/main.js"],"names":["baseUrl","request","url","fetch","then","response","ok","Error","status","json","getPhones","getDetails","phoneId","getPhonesDetails","option","phone","phonesIdList","forEach","data","push","id","Promise","race","allSettled","addPhonesList","title","className","phonesList","container","document","createElement","innerHTML","list","append","body","insertAdjacentHTML","name","toUpperCase","getFirstReceivedDetails","getAllSuccessfulDetails","dataMapped","map","value","getThreeFastestDetails","dataSliced","slice"],"mappings":";AAAA,aAEA,IAAMA,EAAU,4DAEVC,EAAU,SAACC,GACRC,OAAAA,MAASH,GAAAA,OAAAA,GAAUE,OAAAA,IAAOE,KAAK,SAACC,GACjC,IAACA,EAASC,GACN,MAAA,IAAIC,MAAMF,EAASG,QAGpBH,OAAAA,EAASI,UAIdC,EAAY,WACTT,OAAAA,EAAP,iBAGIU,EAAa,SAACC,GACXX,OAAAA,EAAmBW,WAAAA,OAAAA,EAA1B,WAGIC,EAAmB,SAACC,GACjBJ,OAAAA,IAAYN,KAAK,SAACW,GACjBC,IAAAA,EAAe,GAMjBF,OAJJC,EAAME,QAAQ,SAACC,GACbF,EAAaG,KAAKR,EAAWO,EAAKE,OAGrB,UAAXN,EACKO,QAAQC,KAAKN,GAGfK,QAAQE,WAAWP,MAIxBQ,EAAgB,SAACC,EAAOC,EAAWC,GACjCC,IAAAA,EAAYC,SAASC,cAAc,OAEzCF,EAAUF,UAAYA,EACtBE,EAAUG,UAAmBN,OAAAA,OAAAA,EAA7B,SAEMO,IAAAA,EAAOH,SAASC,cAAc,MAEpCF,EAAUK,OAAOD,GACjBH,SAASK,KAAKD,OAAOL,GAErBD,EAAWV,QAAQ,SAACF,GAClBiB,EAAKG,mBACH,YAEMpB,eAAAA,OAAAA,EAAMqB,KAAqBrB,kBAAAA,OAAAA,EAAMK,GAAGiB,cAH5C,0BASEC,EAA0B,WAC9BzB,EAAiB,SAAST,KAAK,SAACc,GAC9BM,EAAc,iBAAkB,iBAAkB,CAACN,OAIjDqB,EAA0B,WAC9B1B,IAAmBT,KAAK,SAACc,GACjBsB,IAAAA,EAAatB,EAAKuB,IAAI,SAAA,GAAeC,OAAZA,EAAAA,QAE/BlB,EAAc,iBAAkB,iBAAkBgB,MAIhDG,EAAyB,WAC7B9B,IAAmBT,KAAK,SAACc,GACjB0B,IACAJ,EADatB,EAAK2B,MAAM,EAAG,GACHJ,IAAI,SAAA,GAAeC,OAAZA,EAAAA,QAErClB,EAAc,cAAe,cAAegB,MAIhDF,IACAC,IACAI","file":"main.58c178a5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst baseUrl = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nconst request = (url) => {\n  return fetch(`${baseUrl}${url}`).then((response) => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n};\n\nconst getPhones = () => {\n  return request(`/phones.json`);\n};\n\nconst getDetails = (phoneId) => {\n  return request(`/phones/${phoneId}.json`);\n};\n\nconst getPhonesDetails = (option) => {\n  return getPhones().then((phone) => {\n    const phonesIdList = [];\n\n    phone.forEach((data) => {\n      phonesIdList.push(getDetails(data.id));\n    });\n\n    if (option === 'first') {\n      return Promise.race(phonesIdList);\n    }\n\n    return Promise.allSettled(phonesIdList);\n  });\n};\n\nconst addPhonesList = (title, className, phonesList) => {\n  const container = document.createElement('div');\n\n  container.className = className;\n  container.innerHTML = `<h2>${title}</h2>`;\n\n  const list = document.createElement('ul');\n\n  container.append(list);\n  document.body.append(container);\n\n  phonesList.forEach((phone) => {\n    list.insertAdjacentHTML(\n      'beforeend',\n      `\n      <li>${phone.name} <span hidden>${phone.id.toUpperCase()}</span></li>\n    `\n    );\n  });\n};\n\nconst getFirstReceivedDetails = () => {\n  getPhonesDetails('first').then((data) => {\n    addPhonesList('First Received', 'first-received', [data]);\n  });\n};\n\nconst getAllSuccessfulDetails = () => {\n  getPhonesDetails().then((data) => {\n    const dataMapped = data.map(({ value }) => value);\n\n    addPhonesList('All Successful', 'all-successful', dataMapped);\n  });\n};\n\nconst getThreeFastestDetails = () => {\n  getPhonesDetails().then((data) => {\n    const dataSliced = data.slice(0, 3);\n    const dataMapped = dataSliced.map(({ value }) => value);\n\n    addPhonesList('First Three', 'first-three', dataMapped);\n  });\n};\n\ngetFirstReceivedDetails();\ngetAllSuccessfulDetails();\ngetThreeFastestDetails();\n"]}